{"version":3,"sources":["../../build/webpack.dev.conf.js"],"names":["utils","require","webpack","config","merge","path","baseWebpackConfig","CopyWebpackPlugin","HtmlWebpackPlugin","FriendlyErrorsPlugin","portfinder","HOST","process","env","PORT","Number","devWebpackConfig","module","rules","styleLoaders","sourceMap","dev","cssSourceMap","usePostCSS","devtool","devServer","clientLogLevel","historyApiFallback","rewrites","from","to","posix","join","assetsPublicPath","hot","contentBase","compress","host","port","open","autoOpenBrowser","overlay","errorOverlay","warnings","errors","publicPath","proxy","proxyTable","quiet","watchOptions","poll","plugins","DefinePlugin","HotModuleReplacementPlugin","NamedModulesPlugin","NoEmitOnErrorsPlugin","filename","template","favicon","inject","resolve","__dirname","assetsSubDirectory","ignore","exports","reject","basePort","getPort","err","push","compilationSuccessInfo","messages","onErrors","notifyOnErrors","createNotifierCallback","undefined"],"mappings":"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","file":"webpack.dev.conf.js","sourcesContent":["'use strict'\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge')\nconst path = require('path')\nconst baseWebpackConfig = require('./webpack.base.conf')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin')\nconst portfinder = require('portfinder')\n\nconst HOST = process.env.HOST\nconst PORT = process.env.PORT && Number(process.env.PORT)\n\nconst devWebpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\n  },\n  // cheap-module-eval-source-map is faster for development\n  devtool: config.dev.devtool,\n\n  // these devServer options should be customized in /config/index.js\n  devServer: {\n    clientLogLevel: 'warning',\n    historyApiFallback: {\n      rewrites: [\n        { from: /.*/, to: path.posix.join(config.dev.assetsPublicPath, 'index.html') },\n      ],\n    },\n    hot: true,\n    contentBase: false, // since we use CopyWebpackPlugin.\n    compress: true,\n    host: HOST || config.dev.host,\n    port: PORT || config.dev.port,\n    open: config.dev.autoOpenBrowser,\n    overlay: config.dev.errorOverlay\n      ? { warnings: false, errors: true }\n      : false,\n    publicPath: config.dev.assetsPublicPath,\n    proxy: config.dev.proxyTable,\n    quiet: true, // necessary for FriendlyErrorsPlugin\n    watchOptions: {\n      poll: config.dev.poll,\n    }\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/dev.env')\n    }),\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NamedModulesPlugin(), // HMR shows correct file names in console on update.\n    new webpack.NoEmitOnErrorsPlugin(),\n    // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: 'index.html',\n      template: 'index.html',\n      favicon: './build/logo.png',\n      inject: true\n    }),\n    // copy custom static assets\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.dev.assetsSubDirectory,\n        ignore: ['.*']\n      }\n    ])\n  ]\n})\n\nmodule.exports = new Promise((resolve, reject) => {\n  portfinder.basePort = process.env.PORT || config.dev.port\n  portfinder.getPort((err, port) => {\n    if (err) {\n      reject(err)\n    } else {\n      // publish the new Port, necessary for e2e tests\n      process.env.PORT = port\n      // add port to devServer config\n      devWebpackConfig.devServer.port = port\n\n      // Add FriendlyErrorsPlugin\n      devWebpackConfig.plugins.push(new FriendlyErrorsPlugin({\n        compilationSuccessInfo: {\n          messages: [`Your application is running here: http://${devWebpackConfig.devServer.host}:${port}`],\n        },\n        onErrors: config.dev.notifyOnErrors\n        ? utils.createNotifierCallback()\n        : undefined\n      }))\n\n      resolve(devWebpackConfig)\n    }\n  })\n})\n"]}