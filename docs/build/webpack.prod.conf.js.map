{"version":3,"sources":["../../build/webpack.prod.conf.js"],"names":["path","require","utils","webpack","config","merge","baseWebpackConfig","CopyWebpackPlugin","HtmlWebpackPlugin","ExtractTextPlugin","OptimizeCSSPlugin","UglifyJsPlugin","env","process","NODE_ENV","webpackConfig","module","rules","styleLoaders","sourceMap","build","productionSourceMap","extract","usePostCSS","devtool","output","assetsRoot","filename","assetsPath","chunkFilename","plugins","DefinePlugin","uglifyOptions","compress","warnings","parallel","allChunks","cssProcessorOptions","safe","map","inline","index","template","inject","title","favicon","minify","removeComments","collapseWhitespace","removeAttributeQuotes","chunksSortMode","HashedModuleIdsPlugin","optimize","ModuleConcatenationPlugin","CommonsChunkPlugin","name","minChunks","resource","test","indexOf","join","__dirname","Infinity","async","children","from","resolve","to","assetsSubDirectory","ignore","productionGzip","CompressionWebpackPlugin","push","asset","algorithm","RegExp","productionGzipExtensions","threshold","minRatio","bundleAnalyzerReport","BundleAnalyzerPlugin","exports"],"mappings":"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","file":"webpack.prod.conf.js","sourcesContent":["'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\nconst OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin')\n\nconst env = process.env.NODE_ENV === 'testing'\n  ? require('../config/test.env')\n  : require('../config/prod.env')\n\nconst webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true,\n      usePostCSS: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? config.build.devtool : false,\n  output: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n  },\n  plugins: [\n    // http://vuejs.github.io/vue-loader/en/workflow/production.html\n    new webpack.DefinePlugin({\n      'process.env': env\n    }),\n    new UglifyJsPlugin({\n      uglifyOptions: {\n        compress: {\n          warnings: false\n        }\n      },\n      sourceMap: config.build.productionSourceMap,\n      parallel: true\n    }),\n    // extract css into its own file\n    new ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css'),\n      // Setting the following option to `false` will not extract CSS from codesplit chunks.\n      // Their CSS will instead be inserted dynamically with style-loader when the codesplit chunk has been loaded by webpack.\n      // It's currently set to `true` because we are seeing that sourcemaps are included in the codesplit bundle as well when it's `false`,\n      // increasing file size: https://github.com/vuejs-templates/webpack/issues/1110\n      allChunks: true,\n    }),\n    // Compress extracted CSS. We are using this plugin so that possible\n    // duplicated CSS from different components can be deduped.\n    new OptimizeCSSPlugin({\n      cssProcessorOptions: config.build.productionSourceMap\n        ? { safe: true, map: { inline: false } }\n        : { safe: true }\n    }),\n    // generate dist index.html with correct asset hash for caching.\n    // you can customize output by editing /index.html\n    // see https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: process.env.NODE_ENV === 'testing'\n        ? 'index.html'\n        : config.build.index,\n      template: 'index.html',\n      inject: true,\n      title: 'blog',\n      favicon: './build/logo.png',\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n      chunksSortMode: 'dependency'\n    }),\n    // keep module.id stable when vendor modules does not change\n    new webpack.HashedModuleIdsPlugin(),\n    // enable scope hoisting\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    // split vendor js into its own file\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks (module) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n    // extract webpack runtime and module manifest to its own file in order to\n    // prevent vendor hash from being updated whenever app bundle is updated\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      minChunks: Infinity\n    }),\n    // This instance extracts shared chunks from code splitted chunks and bundles them\n    // in a separate chunk, similar to the vendor chunk\n    // see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'app',\n      async: 'vendor-async',\n      children: true,\n      minChunks: 3\n    }),\n\n    // copy custom static assets\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      }\n    ])\n  ]\n})\n\nif (config.build.productionGzip) {\n  const CompressionWebpackPlugin = require('compression-webpack-plugin')\n\n  webpackConfig.plugins.push(\n    new CompressionWebpackPlugin({\n      asset: '[path].gz[query]',\n      algorithm: 'gzip',\n      test: new RegExp(\n        '\\\\.(' +\n        config.build.productionGzipExtensions.join('|') +\n        ')$'\n      ),\n      threshold: 10240,\n      minRatio: 0.8\n    })\n  )\n}\n\nif (config.build.bundleAnalyzerReport) {\n  const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin())\n}\n\nmodule.exports = webpackConfig\n"]}