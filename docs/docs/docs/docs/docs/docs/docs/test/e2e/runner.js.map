{"version":3,"sources":["../../../../../../../../../docs/docs/docs/docs/docs/docs/test/e2e/runner.js"],"names":["process","env","NODE_ENV","webpack","require","DevServer","webpackConfig","devConfigPromise","server","then","devConfig","devServerOptions","devServer","compiler","port","host","listen","opts","argv","slice","indexOf","concat","spawn","runner","stdio","on","code","close","exit","err"],"mappings":"AAAA;;AAEA;;AAEAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuB,SAAvB;;AAEA,IAAIC,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAEA,IAAIE,gBAAgBF,QAAQ,+BAAR,CAApB;AACA,IAAIG,mBAAmBH,QAAQ,8BAAR,CAAvB;;AAEA,IAAII,SAAS,KAAK,CAAlB;;AAEAD,iBAAiBE,IAAjB,CAAsB,UAAUC,SAAV,EAAqB;AACzC,MAAIC,mBAAmBD,UAAUE,SAAjC;AACA,MAAIC,WAAWV,QAAQG,aAAR,CAAf;AACAE,WAAS,IAAIH,SAAJ,CAAcQ,QAAd,EAAwBF,gBAAxB,CAAT;AACA,MAAIG,OAAOH,iBAAiBG,IAA5B;AACA,MAAIC,OAAOJ,iBAAiBI,IAA5B;AACA,SAAOP,OAAOQ,MAAP,CAAcF,IAAd,EAAoBC,IAApB,CAAP;AACD,CAPD,EAOGN,IAPH,CAOQ,YAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIQ,OAAOjB,QAAQkB,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,MAAIF,KAAKG,OAAL,CAAa,UAAb,MAA6B,CAAC,CAAlC,EAAqC;AACnCH,WAAOA,KAAKI,MAAL,CAAY,CAAC,UAAD,EAAa,6BAAb,CAAZ,CAAP;AACD;AACD,MAAIJ,KAAKG,OAAL,CAAa,OAAb,MAA0B,CAAC,CAA/B,EAAkC;AAChCH,WAAOA,KAAKI,MAAL,CAAY,CAAC,OAAD,EAAU,QAAV,CAAZ,CAAP;AACD;;AAED,MAAIC,QAAQlB,QAAQ,aAAR,CAAZ;AACA,MAAImB,SAASD,MAAM,gCAAN,EAAwCL,IAAxC,EAA8C,EAAEO,OAAO,SAAT,EAA9C,CAAb;;AAEAD,SAAOE,EAAP,CAAU,MAAV,EAAkB,UAAUC,IAAV,EAAgB;AAChClB,WAAOmB,KAAP;AACA3B,YAAQ4B,IAAR,CAAaF,IAAb;AACD,GAHD;;AAKAH,SAAOE,EAAP,CAAU,OAAV,EAAmB,UAAUI,GAAV,EAAe;AAChCrB,WAAOmB,KAAP;AACA,UAAME,GAAN;AACD,GAHD;AAID,CAnCD;AAoCA;AACA;AACA;AACA;AACA;AACA","file":"runner.js","sourcesContent":["'use strict';\n\n// 1. start the dev server using production config\n\nprocess.env.NODE_ENV = 'testing';\n\nvar webpack = require('webpack');\nvar DevServer = require('webpack-dev-server');\n\nvar webpackConfig = require('../../build/webpack.prod.conf');\nvar devConfigPromise = require('../../build/webpack.dev.conf');\n\nvar server = void 0;\n\ndevConfigPromise.then(function (devConfig) {\n  var devServerOptions = devConfig.devServer;\n  var compiler = webpack(webpackConfig);\n  server = new DevServer(compiler, devServerOptions);\n  var port = devServerOptions.port;\n  var host = devServerOptions.host;\n  return server.listen(port, host);\n}).then(function () {\n  // 2. run the nightwatch test suite against it\n  // to run in additional browsers:\n  //    1. add an entry in test/e2e/nightwatch.conf.js under \"test_settings\"\n  //    2. add it to the --env flag below\n  // or override the environment flag, for example: `npm run e2e -- --env chrome,firefox`\n  // For more information on Nightwatch's config file, see\n  // http://nightwatchjs.org/guide#settings-file\n  var opts = process.argv.slice(2);\n  if (opts.indexOf('--config') === -1) {\n    opts = opts.concat(['--config', 'test/e2e/nightwatch.conf.js']);\n  }\n  if (opts.indexOf('--env') === -1) {\n    opts = opts.concat(['--env', 'chrome']);\n  }\n\n  var spawn = require('cross-spawn');\n  var runner = spawn('./node_modules/.bin/nightwatch', opts, { stdio: 'inherit' });\n\n  runner.on('exit', function (code) {\n    server.close();\n    process.exit(code);\n  });\n\n  runner.on('error', function (err) {\n    server.close();\n    throw err;\n  });\n});\n//# sourceMappingURL=runner.js.map\n//# sourceMappingURL=runner.js.map\n//# sourceMappingURL=runner.js.map\n//# sourceMappingURL=runner.js.map\n//# sourceMappingURL=runner.js.map\n//# sourceMappingURL=runner.js.map"]}