{"version":3,"sources":["../../../../docs/docs/build/utils.js"],"names":["_assign","require","_assign2","_interopRequireDefault","obj","__esModule","default","path","config","ExtractTextPlugin","packageConfig","exports","assetsPath","_path","assetsSubDirectory","process","env","NODE_ENV","build","dev","posix","join","cssLoaders","options","cssLoader","loader","sourceMap","postcssLoader","generateLoaders","loaderOptions","loaders","usePostCSS","push","extract","use","fallback","concat","css","postcss","less","sass","indentedSyntax","scss","stylus","styl","styleLoaders","output","extension","test","RegExp","createNotifierCallback","notifier","severity","errors","error","filename","file","split","pop","notify","title","name","message","subtitle","icon","__dirname"],"mappings":"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","file":"utils.js","sourcesContent":["'use strict';\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar path = require('path');\nvar config = require('../config');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar packageConfig = require('../package.json');\n\nexports.assetsPath = function (_path) {\n  var assetsSubDirectory = process.env.NODE_ENV === 'production' ? config.build.assetsSubDirectory : config.dev.assetsSubDirectory;\n\n  return path.posix.join(assetsSubDirectory, _path);\n};\n\nexports.cssLoaders = function (options) {\n  options = options || {};\n\n  var cssLoader = {\n    loader: 'css-loader',\n    options: {\n      sourceMap: options.sourceMap\n    }\n  };\n\n  var postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      sourceMap: options.sourceMap\n    }\n  };\n\n  // generate loader string to be used with extract text plugin\n  function generateLoaders(loader, loaderOptions) {\n    var loaders = options.usePostCSS ? [cssLoader, postcssLoader] : [cssLoader];\n\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: (0, _assign2.default)({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      });\n    }\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      });\n    } else {\n      return ['vue-style-loader'].concat(loaders);\n    }\n  }\n\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  };\n};\n\n// Generate loaders for standalone style files (outside of .vue)\nexports.styleLoaders = function (options) {\n  var output = [];\n  var loaders = exports.cssLoaders(options);\n\n  for (var extension in loaders) {\n    var loader = loaders[extension];\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      use: loader\n    });\n  }\n\n  return output;\n};\n\nexports.createNotifierCallback = function () {\n  var notifier = require('node-notifier');\n\n  return function (severity, errors) {\n    if (severity !== 'error') return;\n\n    var error = errors[0];\n    var filename = error.file && error.file.split('!').pop();\n\n    notifier.notify({\n      title: packageConfig.name,\n      message: severity + ': ' + error.name,\n      subtitle: filename || '',\n      icon: path.join(__dirname, 'logo.png')\n    });\n  };\n};\n//# sourceMappingURL=utils.js.map\n//# sourceMappingURL=utils.js.map"]}