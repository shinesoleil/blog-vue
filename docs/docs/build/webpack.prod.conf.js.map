{"version":3,"sources":["../../../docs/build/webpack.prod.conf.js"],"names":["path","require","utils","webpack","config","merge","baseWebpackConfig","CopyWebpackPlugin","HtmlWebpackPlugin","ExtractTextPlugin","OptimizeCSSPlugin","UglifyJsPlugin","env","process","NODE_ENV","webpackConfig","module","rules","styleLoaders","sourceMap","build","productionSourceMap","extract","usePostCSS","devtool","output","assetsRoot","filename","assetsPath","chunkFilename","plugins","DefinePlugin","uglifyOptions","compress","warnings","parallel","allChunks","cssProcessorOptions","safe","map","inline","index","template","inject","minify","removeComments","collapseWhitespace","removeAttributeQuotes","chunksSortMode","HashedModuleIdsPlugin","optimize","ModuleConcatenationPlugin","CommonsChunkPlugin","name","minChunks","resource","test","indexOf","join","__dirname","Infinity","async","children","from","resolve","to","assetsSubDirectory","ignore","productionGzip","CompressionWebpackPlugin","push","asset","algorithm","RegExp","productionGzipExtensions","threshold","minRatio","bundleAnalyzerReport","BundleAnalyzerPlugin","exports"],"mappings":"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","file":"webpack.prod.conf.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar utils = require('./utils');\nvar webpack = require('webpack');\nvar config = require('../config');\nvar merge = require('webpack-merge');\nvar baseWebpackConfig = require('./webpack.base.conf');\nvar CopyWebpackPlugin = require('copy-webpack-plugin');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin');\nvar UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n\nvar env = process.env.NODE_ENV === 'testing' ? require('../config/test.env') : require('../config/prod.env');\n\nvar webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true,\n      usePostCSS: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? config.build.devtool : false,\n  output: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n  },\n  plugins: [\n  // http://vuejs.github.io/vue-loader/en/workflow/production.html\n  new webpack.DefinePlugin({\n    'process.env': env\n  }), new UglifyJsPlugin({\n    uglifyOptions: {\n      compress: {\n        warnings: false\n      }\n    },\n    sourceMap: config.build.productionSourceMap,\n    parallel: true\n  }),\n  // extract css into its own file\n  new ExtractTextPlugin({\n    filename: utils.assetsPath('css/[name].[contenthash].css'),\n    // Setting the following option to `false` will not extract CSS from codesplit chunks.\n    // Their CSS will instead be inserted dynamically with style-loader when the codesplit chunk has been loaded by webpack.\n    // It's currently set to `true` because we are seeing that sourcemaps are included in the codesplit bundle as well when it's `false`, \n    // increasing file size: https://github.com/vuejs-templates/webpack/issues/1110\n    allChunks: true\n  }),\n  // Compress extracted CSS. We are using this plugin so that possible\n  // duplicated CSS from different components can be deduped.\n  new OptimizeCSSPlugin({\n    cssProcessorOptions: config.build.productionSourceMap ? { safe: true, map: { inline: false } } : { safe: true }\n  }),\n  // generate dist index.html with correct asset hash for caching.\n  // you can customize output by editing /index.html\n  // see https://github.com/ampedandwired/html-webpack-plugin\n  new HtmlWebpackPlugin({\n    filename: process.env.NODE_ENV === 'testing' ? 'index.html' : config.build.index,\n    template: 'index.html',\n    inject: true,\n    minify: {\n      removeComments: true,\n      collapseWhitespace: true,\n      removeAttributeQuotes: true\n      // more options:\n      // https://github.com/kangax/html-minifier#options-quick-reference\n    },\n    // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n    chunksSortMode: 'dependency'\n  }),\n  // keep module.id stable when vendor modules does not change\n  new webpack.HashedModuleIdsPlugin(),\n  // enable scope hoisting\n  new webpack.optimize.ModuleConcatenationPlugin(),\n  // split vendor js into its own file\n  new webpack.optimize.CommonsChunkPlugin({\n    name: 'vendor',\n    minChunks: function minChunks(module) {\n      // any required modules inside node_modules are extracted to vendor\n      return module.resource && /\\.js$/.test(module.resource) && module.resource.indexOf(path.join(__dirname, '../node_modules')) === 0;\n    }\n  }),\n  // extract webpack runtime and module manifest to its own file in order to\n  // prevent vendor hash from being updated whenever app bundle is updated\n  new webpack.optimize.CommonsChunkPlugin({\n    name: 'manifest',\n    minChunks: Infinity\n  }),\n  // This instance extracts shared chunks from code splitted chunks and bundles them\n  // in a separate chunk, similar to the vendor chunk\n  // see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk\n  new webpack.optimize.CommonsChunkPlugin({\n    name: 'app',\n    async: 'vendor-async',\n    children: true,\n    minChunks: 3\n  }),\n\n  // copy custom static assets\n  new CopyWebpackPlugin([{\n    from: path.resolve(__dirname, '../static'),\n    to: config.build.assetsSubDirectory,\n    ignore: ['.*']\n  }])]\n});\n\nif (config.build.productionGzip) {\n  var CompressionWebpackPlugin = require('compression-webpack-plugin');\n\n  webpackConfig.plugins.push(new CompressionWebpackPlugin({\n    asset: '[path].gz[query]',\n    algorithm: 'gzip',\n    test: new RegExp('\\\\.(' + config.build.productionGzipExtensions.join('|') + ')$'),\n    threshold: 10240,\n    minRatio: 0.8\n  }));\n}\n\nif (config.build.bundleAnalyzerReport) {\n  var BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin());\n}\n\nmodule.exports = webpackConfig;\n//# sourceMappingURL=webpack.prod.conf.js.map"]}